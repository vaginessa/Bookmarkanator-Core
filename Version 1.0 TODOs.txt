Core:
_____________________________________


Done Add Logging to the whole project.
Done - TODO Refactor/simplify bootstrap
Done - TODO Take a look at the bookmarks xml parser and verify the settings loading is working properly.

*** TODO Modify the bookmarks to have a method that returns the words to search in the text. This will allow the text bookmarks to have formatting stored in them, but to also have searchable text. This would necessitate modification of the search systems to use this new method. Also there would have to be an HTML bookmark that could strip the formatting out when necessary.

Not done - Added loading from current directory which would have a similar affect - TODO Have a way to list workspaces and transfer bookmarks between them.
TODO Make a way to encrypt the contents of the selected directory, and unencrypt it (im memory only) when running.

Settings:

Done - TODO Fix/improve importing of settings from other settings objects.

Bookmarks:

TODO Implement Terminal Bookmark
TODO Implement Sequence bookmark
TODO Make it so bookmarks.xml backups only store a single backup when changes are detected.

Testing:

TODO Perform settings/bookmarks loading/saving testing.
TODO Perform cross platform tests

UI:
_____________________________________
TODO When closing the main window, if other windows are open, and then updated their text is not updated. throw a warning when trying to update a window after closing the main window.
TODO Implement functionality in the file menu.
TODO Add workspace switching to the file menu.
TODO Add a way to filter bookmarks by date range in the search UI interface.
TODO Modify the new bookmark window to sort bookmark types, and be able to select a new bookmark with fewer clicks.
TODO Create quick panel.
TODO Store UI settings, and fill them back in upon program load. Things like search options, selected bookmarks, window size and position, in quick panel or normal state, etc...
TODO Limit the width of the tags windows in the new bookmark views to not have to scroll sideways.
TODO ADD bookmark type icons.
TODO Change selected tags group type based on which type is selected or on load.
TODO Improve tag group highlighting to show which group is selected.
TODO Improve the colors a bit to be more consistent and more easily modified. Possibly use settings?
TODO Add splash screen
TODO Add task bar icon
TODO Look into adding jar icon
TODO Add tutorial functionality to show users how the program is to be used. /help menu /tutorial -- Runs the first time the program is run.
TODO Add an about screen /help menu / about
TODO Add technical documentation /help menu /technicaldocumentation

TODO Add bookmark import/export functionality (should export showing bookmarks or all bookmarks)
TODO Improve setting of overriding classes, and other default settings.
TODO Add a settings modification window. Specify UI settings, core settings, and default settings. Allow the overriding of any overridable types (currently bookmarks, bookmark UI's, bookmark io, and bookmark context classes, as well as controller, and any UI classes.
TODO Add the ability to perform actions on tags, e.g. delete, rename, remove, remove from showing bookmarks, add to showing bookmarks, merge tags, suggest operations on tags, and tell the user about redundant tags.
TODO Prevent shutting down of main window while other windows are open.

TODO Implement Encrypted bookmark UI
--Done - TODO Implement file bookmark UI
TODO Implement Terminal Bookmark UI
TODO Implement Sequence bookmark UI - use main window as the search interface, possibly rearrange windows side by side?

TODO Validate web bookmark is a proper web address before allowing submission.

TODO Perform UI tests
TODO Perform cross platform tests
TODO Add right click functionality to all UI elements that need it.
TODO Add tool tip comments for all UI elements that need it.
TODO ADD drag and drop support - expected: drag file, text, web address, etc into the main program, and a popup should show with the bookmarks that indicate they can handle the dropped data. Simply select the correct one and it will pop up a new bookmark dialog for that bookmark.

TODO Add bookmark counts in the various panels (a count indicator on each type button, a total bookmarks count above the bookmarks list panel, and counts for the tags windows)
TODO Setup help screens that pop up when using something for the first time, or add a question mark on things to people can get information about it.

Bugs:

TODO Sometimes when a bookmark is added or tags are changed, or the text is changed, the available tags do not get updated, and neither does the text search.
- Done (created plain text and html text bookmarks) - TODO Full text search is not working properly because the bookmark text contains html. What to do with the html?
TODO When doing a search only the tags in the left most selected tag panel highlight, any additional panels dont have highlight.
TODO It appears that selecting search specific types doesn't restrict types. I selected search bookmark names only, and when I searched "ab" it found tags with "ab" in them.
TODO When a text bookmark is opened, but not in edit mode, if the text is changed the text is updated, if the name is changed it is not updated.

- Fixed - TODO Bug when adding text that has a "%h:" in it. Here is the stacktrace:
Exception in thread "JavaFX Application Thread" java.lang.RuntimeException: java.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: "h:"
	at com.bookmarkanator.ui.fxui.BookmarksListUI$2.handle(BookmarksListUI.java:63)
	at com.bookmarkanator.ui.fxui.BookmarksListUI$2.handle(BookmarksListUI.java:40)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$ClickGenerator.postProcess(Scene.java:3470)
	at javafx.scene.Scene$ClickGenerator.access$8100(Scene.java:3398)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3766)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:352)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:275)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:388)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:387)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
Caused by: java.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: "h:"
	at java.net.URLDecoder.decode(URLDecoder.java:194)
	at com.bookmarkanator.ui.fxui.bookmarks.HTMLFormattedBookmarkUI.getTextArea(HTMLFormattedBookmarkUI.java:251)
	at com.bookmarkanator.ui.fxui.bookmarks.HTMLFormattedBookmarkUI.getbookmarkView(HTMLFormattedBookmarkUI.java:210)
	at com.bookmarkanator.ui.fxui.bookmarks.HTMLFormattedBookmarkUI.show(HTMLFormattedBookmarkUI.java:43)
	at com.bookmarkanator.ui.fxui.BookmarksListUI$2.handle(BookmarksListUI.java:57)
	... 28 more

